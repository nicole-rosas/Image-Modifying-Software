USEME
Will list what script commands are supported in our image processing program and show examples of their uses. Depending on the different status of the program, different methods will be allowed for the user to use.
1. Available commands for no layers <- when starting up the image processing program.
2. Available commands for an empty layer <- when creating a new layer that has no image inside.
3. Available commands for a normal layer <- when using the image processing to edit/filter the image in a layer.


Available commands when there are no layers
     // Load
load <String> <Location> - load followed by 'layers' will load the layer at the location provided.
// Add
add <String> - add followed by a string name will add a visible layer to the top of the program, with the given name.
    // Create
    newDir <String> - Will create a new directory at the given path.
    // Run Script
    run <String> - run followed by the file location will run the script.
Available commands for an empty layer
// Import
import <Type> <String> - import followed by the type and the string will import a file in the given format. PPM, JPEG, PNG.
// Save
     save <String> - save followed by the location name will save all layers as files and a file that contains the location of the layer files. It will automatically create new folders for the user in the user's desired location.
    // Load
    load <String> <Location> - load followed by 'layers' will load the layer at the location provided.
    // Generate
    generate <String> <int> <int> <double> - generate the image pattern that is specified and load it onto the current layer. The three follow up ints and double can be entered,or leave it as -1 to use default values.
    // Add
    add <String> - add followed by a string name will add a visible layer to the top of the program, with the given name.
    // Change
    change <String> <String> - change followed by the change command and name. If the process is name, then the second string is the new name of the layer. If the process is change 'current' layer, then the second string is the name of the layer to be current. If the process is 'visibility', then the layer will be hidden if the second input is 'hidden' and the layer will be visible if the second layer is 'visible'.
    // Delete
    delete <String> - delete the layer that is the given name. If incorrect name is provided, then it does not do anything.
    // Create
    newDir <String> - Will create a new directory at the given path.
    // Switch Place
    switch <String> <int> - changes the position of the "
        + "layer by the place.
    // Change Vis
    hide <String> - change the visibility of the layer by the name to hidden.
    visible <String> - change the visibility of the "
        + "layer by the name to visible.
    // Undo
    undo - undo will go back to the previous layer's state.


Available commands for a layer with an image inside
        // Sepia 
sepia - transform the image in the current layer with the sepia process.
    // Greyscale
    greyscale - transform the image in the current layer with the greyscale process.
    // Blur
    blur - filter the image in the current layer with the blur process.
    // Sharpen
    sharpen - filter the image in the current layer with the sharpen process.
    // Import
    import <Type> <String> - import followed by the type and the string will import a file in the given format. PPM, JPEG, PNG.
    // Export
    export <Type> <String> - export followed by the type and the string will export a file in the given format and name. PPM, JPEG, PNG.
    // Save
    save <String> - save followed by the location name will save all layers as files and a file that contains the location of the layer files. It will automatically create new folders for the user in the user's desired location.
    // Load
    load <String> <Location> - load followed by 'layers' will load the layer at the location provided.
    // Generate
    generate <String> <int> <int> <double> - generate the image pattern that is specified and load it onto the current layer. The three follow up ints and double can be entered, or leave it as -1 to use default values.
    // Add
    add <String> - add followed by a string name will add a visible layer to the top of the program, with the given name.
    // Change
    change <String> <String> - change followed by the change command and name, and optional status. If the process is 'name', then the second string is the new name of the layer. If the process is change 'current' layer, then the second string is the name of the layer to be current.
    // Change Vis
    hide <String> - change the visibility of the layer by the name to hidden.
    visible <String> - change the visibility of the layer by the name to visible.
    // Switch Place
    switch <String> <int> - changes the position of the layer by the place.
    // Undo
    undo - undo will go back to the previous layer's state.
    // Remove
    removeImage - remove will remove the current image in the layer.
    // Delete
    delete <String> - delete the layer that is the given name. If an incorrect name is provided, then does not do anything.
    // Create
    newDir <String> - Will create a new directory at the given path.
    // Run Script
    run <String> - run followed by the file location will run the script.


GUI and Command Line

first, run the GUI from the command line like so:

java -jar program.jar -interactive

note: the program.jar file should be in the working directory; the directory your command line is currently in.

Running the above command will open a GUI.

All buttons and functionality are available, and they all are similar to the text program, but as a GUI.
However, any buttons that you press that aren't available as commands at the time will result in the program
displaying the error in the bottom of the screen.

Any images that are too big for the program will automatically generate a scroll pane for the user to scroll around.

The left side of the UI are reserved for operations related to either the image or the program. 

The processes Blur/Sharpen/Greyscale/Sepia are related to the image. When there is an image in a layer, or an image in the current layer, pressing those buttons will modify and do a process onto that image.

The next module is generating a checkerboard image. The user can input numbers into the fields, and choose the two colors available, and when pressed generate, if there is a layer, it will generate an image in that current layer.

Importing and Exporting images. These buttons will import an image that is supported format into the current layer, and export the top most visible image.
Note: when exporting, the user must verify the file format.

EXAMPLE: export ? filename.<Desire file format>
export ? image.ppm

Run script will allow the user to choose a file to import as a script, and then run the program on that script. Undo will allow the user to undo an operation.

The middle panels are reserved for image(In the big panel) and message that the program will send to the user(the smaller panel.) Any operations that the user run will have an accompanying message in the bottom panel.

The right panels are reserved for layers and layers operation. The user can click on add layer to add a layer into the layer panel. The first layer created will be the current layer. Subsequent layers are not current, but will be created above the current layer.

The delete layer button will delete the current layer.

The change name button will change the name of the current layer to one that is inputted into the text box above.

In the layers itself, layers that are the current layer does not have a button that says current in it. The up and down buttons, when available, will move the layer up and down one layer.

The save and load layers will save the current program as layers. The user can only save into a directory. To load the program, the user can import a file with the extension .layerlocat

To save, just go into the wanted directory, and type in the desired directory name that you want the program to save your layers into.

Example:

to save to directory Assignment/help/me/too/program/, we go to the directory
Assignment/help/me/too/, and then input the folder "program".

To quit, simply quit with the system's program quit button.
